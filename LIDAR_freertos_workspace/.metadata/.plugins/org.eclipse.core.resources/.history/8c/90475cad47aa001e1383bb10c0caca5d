#include "sys_helper_task.h"

TaskHandle_t TaskHandle_alive;

TaskHandle_t TaskHandle_print_lidar_point;
extern h_lidar_t 			lidar;

int create_sys_task(int task_priority)
{
	printf("Loading system helper task with priority %d\n\r",task_priority);
	BaseType_t xReturned;
	xReturned = xTaskCreate(
			is_system_alive,
			"is_system_alive",
			500,
			NULL,
			task_priority,
			&TaskHandle_alive);

    if(xReturned==pdPASS){
		printf("Task loaded\r\n");
	}else{
		printf("Error loading task\r\n");
		return 1;
	}

	printf("Loading lidar printing task with priority %d\n\r",task_priority+1);
	xReturned = xTaskCreate(
			print_lidar_point,
			"print points",
			5000,
			NULL,
			task_priority,
			&TaskHandle_print_lidar_point);

    if(xReturned==pdPASS){
		printf("Task loaded\r\n");
	}else{
		printf("Error loading task\r\n");
		return 1;
	}
	return 0;
}

void is_system_alive(void *unused)
{
	printf("Starting is_system_alive task\r\n");
	for(;;){
		printf("Alive\r\n");
		vTaskDelay(pdMS_TO_TICKS(1000));
	}
}

void print_lidar_point(void *unused)
{
	printf("Starting print_lidar_point task\r\n");
	for(;;)
	{
		for(int i=0;i<100;i++)
		{
			printf("S%d | %u\r\n",i,lidar.points[i]);
		}
		vTaskDelay(pdMS_TO_TICKS(2000));
	}
}

